{"name":"lucidtail","tagline":"A real-time zero-configuration web-based tail","body":"lucidTAIL\r\n=========\r\n\r\nA real-time zero-configuration web-based tail. It broadcasts events such as\r\nnew lines added to any monitored files, new UDP messages, and those emitted by other\r\n[EventEmitters](http://nodejs.org/api/events.html#events_class_events_eventemitter)\r\nto your browser.\r\n\r\n`lucidtail` Command\r\n-------------------\r\n\r\nThe `lucidtail` command listens to specified sources and displays them in a pretty little\r\nweb application.\r\n\r\nTo quickly be able to view your logs at [http://localhost:8080](http://localhost:8080):\r\n\r\n\tnpm install lucidtail -g # One time global install\r\n\tlucidtail *.log\r\n\r\n### Installation\r\n\r\nYou must already have [nodejs](http://nodejs.org/download/) installed.\r\n\r\n#### Method: Simple\r\n\r\nTo install lucidTAIL globally:\r\n\r\n\tnpm install lucidtail -g\r\n\r\nThis allows you to use the `lucidtail` command. You may need root/Administrator access, if\r\nyou don't have it you can alternately get lucidTAIL from the [git repository](#from-git).\r\n\r\n#### Method: From GIT\r\n\r\nClone lucidTAIL:\r\n\r\n\tgit clone git://github.com/davidnqd/lucidtail.git\r\n\r\nYou should now be able to use `lucidtail/index.js` or `node lucidtail/index.js`\r\ninstead of `lucidtail`.\r\n\r\n### Usage\r\n\r\nPlease see `lucidtail --help`\r\n\r\n### Examples\r\n\r\n`lucidtail` will use it's default http port (8080) when running.\r\n\r\n#### Monitor Files\r\n\r\nMonitor all files ending with '.log'.\r\n\r\n\tlucidtail *.log\r\n\r\n#### Monitor UDP\r\n\r\nMonitor UDP messages on port 514 (syslog). This requires root access on most systems.\r\n\r\n\tlucidtail -u 514\r\n\r\n#### Publish on port 1337\r\n\r\n * Monitor all files ending with '.log'.\r\n * Monitor UDP messages on port 514 (syslog). This requires root access on most systems.\r\n * Publish on port 1337 (default: 8080)\r\n\r\n\tlucidtail *.log -u 514 -p 1337\r\n\r\nAdvanced Setups\r\n---------------\r\n\r\n### Examples\r\n\r\nThe examples assume you have either added lucidtail to your `package.json` or executed:\r\n\r\n\tnpm install lucidtail\r\n\r\n#### Test\r\n\r\nCreate an instance of lucidTAIL which services the default port (port 8080):\r\n\r\n\trequire('lucidtail')()\r\n\t\t.use('test');\r\n\r\n#### UDP\r\n\r\nThe following will display all inbound UDP packets on port 1337:\r\n\r\n\trequire('lucidtail')()\r\n\t\t.use('udp4', 1337);\r\n\r\n**Note**: Port 80 and 514 are usually restricted ports and may require root/Administrator\r\nprivileges.\r\n\r\n#### syslog\r\n\r\nThe following will display inbound syslog messages (port 514) on HTTP port 80:\r\n\r\n**Notes**:\r\n\r\n * This example requires [lazy](https://npmjs.org/package/lazy) which is on npm.\r\n * Port 80 and 514 may require root/Administrator privileges to bind.\r\n\r\n**Example**:\r\n\r\n\tvar lucidtail = require('lucidtail'),\r\n\t\tlazy = require('lazy');\r\n\r\n\t// Use a simple regex to parse out the values in the message\r\n\t// Not even RFC 3164, but this is just an example.\r\n\tvar regex = /(<\\d+>)?(\\w{3} +\\d+ \\d{2}:\\d{2}:\\d{2})?( \\w+)?( \\w+\\[?\\d*\\]?)?: (.*)/;\r\n\tvar syslog = lazy(lucidtail.emitter('udp4', 514))\r\n\t\t.map(function(data) {\r\n\t\t\tvar matches = data.data.match(regex);\r\n\t\t\tif (matches) {\r\n\t\t\t\tif (matches[1])\r\n\t\t\t\t\tdata.pri = matches[1].replace(/[<>]/g, '');\r\n\t\t\t\tif (matches[2])\r\n\t\t\t\t\tdata.date = matches[2];\r\n\t\t\t\tif (matches[3])\r\n\t\t\t\t\tdata.host = matches[3].substring(1);\r\n\t\t\t\tif (matches[4])\r\n\t\t\t\t\tdata.application = matches[4].substring(1);\r\n\t\t\t\tif (matches[5])\r\n\t\t\t\t\tdata.msg = matches[5];\r\n\t\t\t}\r\n\t\t\treturn data;\r\n\t\t});\r\n\r\n\t// Create aggregate emitter\r\n\tvar emitter = lucidtail(80)\r\n\t\t// Listen to a test emitter\r\n\t\t.listen(syslog);","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}